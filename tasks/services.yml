# Ensure systemd services and timers are configured

---

# Services
- name: Ensure systemd service files are configured
  ansible.builtin.template:
    src: borgmatic.service.j2
    dest: '{{ borgmatic_systemd_path }}/{{ item.name.rstrip(".service") }}.service'
    owner: '{{ borgmatic_user_facts.name }}'
    group: '{{ borgmatic_user_facts.group }}'
    mode: 0644
  become_user: '{{ borgmatic_user_facts.name }}'
  become: true
  loop_control:
    label: '{{ item.name }}'
  when: item.state | default('present') == 'present'
  loop: '{{ borgmatic_services }}'

- name: Ensure absent systemd service files are removed
  ansible.builtin.file:
    path: '{{ borgmatic_systemd_path }}/{{ item.name.rstrip(".service") }}.service'
    state: absent
  become_user: '{{ borgmatic_user_facts.name }}'
  become: true
  loop_control:
    label: '{{ item.name }}'
  when: item.state | default('present') == 'absent'
  loop: '{{ borgmatic_services }}'

# Timers
- name: Ensure systemd timer files are configured
  ansible.builtin.template:
    src: borgmatic.timer.j2
    dest: '{{ borgmatic_systemd_path }}/{{ item.name.rstrip(".service") }}.timer'
    owner: '{{ borgmatic_user_facts.name }}'
    group: '{{ borgmatic_user_facts.group }}'
    mode: 0644
  become_user: '{{ borgmatic_user_facts.name }}'
  become: true
  loop_control:
    label: '{{ item.name }}'
  when: item.state | default('present') == 'present'
  loop: '{{ borgmatic_services | selectattr("timer.oncalendar", "defined") }}'

- name: Retrieve existing systemd timer units
  ansible.builtin.find:
    paths: '{{ borgmatic_systemd_path }}'
    patterns: '*.timer'
  become_user: '{{ borgmatic_user_facts.name }}'
  become: true
  register: systemd_timers

- name: Ensure systemd timers are configured
  ansible.builtin.systemd:
    name: '{{ item.name.rstrip(".service") }}.timer'
    scope: '{{ borgmatic_systemd_scope }}'
    state: '{{ "started" if item.state | default("present") == "present" and item.timer.oncalendar is defined else "stopped" }}'
    enabled: '{{ true if item.state | default("present") == "present" and item.timer.oncalendar is defined else false }}'
  vars:
    timer_file: '{{ borgmatic_systemd_path }}/{{ item.name.rstrip(".service") }}.timer'
  become_user: '{{ borgmatic_user_facts.name }}'
  become: true
  loop_control:
    label: '{{ item.name }}'
  when: timer_file in systemd_timers.files | map(attribute='path')
  loop: '{{ borgmatic_services }}'

- name: Ensure absent systemd timer files are removed
  ansible.builtin.file:
    path: '{{ borgmatic_systemd_path }}/{{ item.name.rstrip(".service") }}.timer'
    state: absent
  become_user: '{{ borgmatic_user_facts.name }}'
  become: true
  loop_control:
    label: '{{ item.name }}'
  when: item.state | default('present') == 'absent'
  loop: '{{ borgmatic_services }}'
